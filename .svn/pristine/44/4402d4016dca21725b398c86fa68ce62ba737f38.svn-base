package car_manager_dto;

import car_manager_dao.DBManager;
import car_manager_vo.*;

public class parkDTO extends DBManager
{
	//게시물을 등록한다.
	public boolean Insert(parkVO vo)
	{
		this.DBOpen();
		
		String sql = "";

		sql  = "insert into park (park_no,park_exist,user_no,move_no,photo_no,fname) ";
		sql += "values ('" + vo.getPark_no() + "','" + vo.getPark_exist() + "','" + vo.getUser_no() + "','" + vo.getMove_no() + "','" + vo.getPhoto_no() + "') ";
		this.RunCommand(sql);
		
		this.DBClose();
		return true;
	}
	
	//게시물 정보를 변경한다.
	public boolean Update(parkVO vo)
	{
		this.DBOpen();
		
		String sql = "";
		sql  = "update park set ";
		sql += "park_exist='" + vo.getPark_exist() + "',";
		sql += "user_no='" + vo.getUser_no() + "',";
		sql += "move_no='" + vo.getMove_no() + "',";
		sql += "photo_no='" + vo.getPhoto_no() + "' ";
		sql += "where park_no = " + vo.getPark_no();
		this.RunCommand(sql);
		
		this.DBClose();
		return true;
	}
	
	//게시물 정보를 삭제한다.
	public boolean Delete(parkVO no)
	{
		this.DBOpen();
		
		String sql = "";

		sql = "delete from park where no = " + no;
		this.RunCommand(sql);

		this.DBClose();
		return true;
	}
	
	//게시물 1개의 정보를 조회한다.
	public parkVO Read(String no)
	{
		String sql = "";
		
		this.DBOpen();

		sql  = "select park_exist,user_no,move_no,photo_no, ";
		sql += "from park where park_no = " + no;
		this.RunQuery(sql);
		if( this.GetNext() == false)
		{
			//해당 게시물 없음.
			this.DBClose();
			return null;
		}
		parkVO vo = new parkVO();
		vo.setPark_no(no);
		vo.setPark_exist(this.GetValue("park_exist"));
		vo.setUser_no(this.GetValue("user_no"));
		vo.setPhoto_no(this.GetValue("move_no"));
		vo.setMove_no(this.GetValue("photo_no"));

		this.DBClose();
		return vo;
	}
}
